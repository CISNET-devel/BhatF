	PRINT 1000
	PRINT 7020
	READ(5,7010) STRING1

	IF(STRING1.EQ.'CONTOUR'.OR.STRING1.EQ.'contour') THEN

222	PRINT 1000
        OPEN(20,file="tmp_",status="unknown")
	OPEN(22,file="plot.gnu",status="unknown")
	PRINT*,'WHICH VARIABLES ARE TO BE PLOTTED:'
	PRINT*,'CHOICES ARE'
	do i=1,npar
	PRINT 8020,I,LABELS(I)
	enddo
	READ*,IX,IY

c	PRINT*,'NX:  NY: SCALE (IN UNITS OF SE):'
c	READ*,NX,NY,SCL
	NX=20
	NY=20
		NX1=NX+1
		NY1=NY+1

		IF(SUL(IX).GT.S1(IX)) THEN
		XMIN=SUL(IX)
		ELSE
		XMIN=S1(IX)+1.D-4
		ENDIF

		IF(SUU(IX).LT.S2(IX)) THEN
		XMAX=SUU(IX)
		ELSE
		XMAX=S2(IX)-1.D-4
		ENDIF

		IF(SUL(IY).GT.S1(IY)) THEN
		YMIN=SUL(IY)
		ELSE
		YMIN=S1(IY)+1.D-4
		ENDIF

		IF(SUU(IY).LT.S2(IY)) THEN
		YMAX=SUU(IY)
		ELSE
		YMAX=S2(IY)-1.D-4
		ENDIF

c	OPEN(UNIT=20,FILE='CONT.TMP',STATUS='UNKNOWN')
c	OPEN(UNIT=21,FILE='OPTIONS',STATUS='UNKNOWN')
c	WRITE(21,9054) IX,IY
c
c	WRITE(20,9051) XMINI,XMAX,YMIN,YMAX
c	WRITE(20,*) NX1,NY1
	
	DO I=1,NPAR
	SC(I)=SU(I)
	ENDDO

	DX=(XMAX-XMIN)/DFLOAT(NX)
	DY=(YMAX-YMIN)/DFLOAT(NY)

	DO I=0,NX
	SC(IX)=XMIN+I*DX
	DO J=0,NY
	SC(IY)=YMIN+J*DY
	CALL FUNC(SC,NPAR,FC)
	NCT=NCT+1
	WRITE(20,*) SC(IX),SC(IY),-FC
	ENDDO	
	ENDDO

	CLOSE(UNIT=20)

	WRITE(22,8000) LABELS(IX),LABELS(IY)
	IF(I1.GE.1) PRINT 8010, LABELS(IX),LABELS(IY)
	REWIND(22)
!	CALL SYSTEM('gnuplot "plot.gnu"')
	REWIND(22)

C	CALL SYSTEM('contour -e -bg white -fg black -o OPTIONS CONT.TMP')
C	PRINT*,'DO YOU WANT 3D VIEW? (Y/N)'
C	READ 9053, ANSWER
C	IF(ANSWER.EQ.'N'.OR.ANSWER.EQ.'n') GOTO 805	
C	CALL SYSTEM('pdraw -bg white -fg black -o OPTIONS image.cont.3D')

	PRINT*,'ANOTHER CONTOUR PLOT (Y/N)?'
	READ 9053,ANSWER
	IF(ANSWER.EQ.'Y'.OR.ANSWER.EQ.'y') THEN
	GOTO 222
	ELSE
!	CALL SYSTEM('rm tmp_')
	ENDIF
	
	ELSEIF(STRING1.EQ.'ERROR'.OR.STRING1.EQ.'error') THEN

c ----	program to compute (co)variance of prob. of tumor
        PRINT 1000
        PRINT*,'VARIANCE ON SELECTED FUNCTION:'
c	call ptvar(ndim,su,sul,suu,bidy)

	ELSEIF(STRING1.EQ.'SAVE'.OR.STRING1.EQ.'save') THEN

	OPEN(UNIT=20,FILE='Bhat.sav',STATUS='UNKNOWN')
        WRITE(20,*) NPAR
        WRITE(20,*) (X0(I),I=1,NPAR)
        WRITE(20,*) (SE(I),I=1,NPAR)
        WRITE(20,*) ((BIDY(I,J),I=1,NPAR),J=1,NPAR)
        CLOSE(UNIT=20)

	else
	RETURN
	ENDIF
        

